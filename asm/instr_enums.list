
set	register_types
#	enum	width	string
def	R_inv	0	invalid
def	R_A	1	a
def	R_B	1	b
def	R_C	1	c
def	R_D	1	d
def	R_E	1	e
def	R_H	1	h
def	R_L	1	l
def	R_I	1	i
def	R_R	1	r
def	R_AF	2	af
def	R_AF_	2	af'
def	R_BC	2	bc
def	R_DE	2	de
def	R_HL	2	hl
def	R_SP	2	sp
def	R_IX	2	ix
def	R_IY	2	iy
endset

set	flag_types
#  (width field not used)
#	enum	width	string
def	F_inv	0	invalid
def	F_Z	1	z
def	F_NZ	1	nz
def	F_C	1	cr
def	F_NC	1	ncr
def	F_PE	1	pe
def	F_PO	1	po
def	F_M	1	m
def	F_P	1	p
def	F_H	1	h
def	F_NH	1	nh
def	F_N	1	n
def	F_NN	1	nn
endset

set	instruction_types
#  (width field not used)
def	I_invalid	0	invalid
def	I_pref_cb	0	prefix_cb
def	I_pref_dd	0	prefix_dd
def	I_pref_ed	0	prefix_ed
def	I_pref_fd	0	prefix_fd
def	I_pref_ddcb	0	prefix_ddcb
def	I_pref_fdcb	0	prefix_fdcb
#	enum	width	string
def	I_adc	1	adc	
def	I_add	1	add	
def	I_and	1	and	
def	I_bit	1	bit	
def	I_call	1	call	
def	I_ccf	1	ccf	
def	I_cp	1	cp	
def	I_cpd	1	cpd	
def	I_cpdr	1	cpdr	
def	I_cpi	1	cpi	
def	I_cpir	1	cpir	
def	I_cpl	1	cpl	
def	I_daa	1	daa	
def	I_dec	1	dec	
def	I_di	1	di	
def	I_djnz	1	djnz	
def	I_ei	1	ei	
def	I_ex	1	ex	
def	I_exx	1	exx	
def	I_halt	1	halt	
def	I_im	1	im	
def	I_in	1	in	
def	I_inc	1	inc	
def	I_ind	1	ind	
def	I_indr	1	indr	
def	I_ini	1	ini	
def	I_inir	1	inir	
def	I_jp	1	jp	
def	I_jr	1	jr	
def	I_ld	1	ld	
def	I_ldd	1	ldd	
def	I_lddr	1	lddr	
def	I_ldi	1	ldi	
def	I_ldir	1	ldir	
def	I_neg	1	neg	
def	I_nop	1	nop	
def	I_or	1	or	
def	I_otdr	1	otdr	
def	I_otir	1	otir	
def	I_out	1	out	
def	I_outd	1	outd	
def	I_outi	1	outi	
def	I_pop	1	pop	
def	I_push	1	push	
def	I_res	1	res	
def	I_ret	1	ret	
def	I_reti	1	reti	
def	I_retn	1	retn	
def	I_rl	1	rl	
def	I_rla	1	rla	
def	I_rlc	1	rlc	
def	I_rlca	1	rlca	
def	I_rld	1	rld	
def	I_rr	1	rr	
def	I_rra	1	rra	
def	I_rrc	1	rrc	
def	I_rrca	1	rrca	
def	I_rrd	1	rrd	
def	I_rst	1	rst	
def	I_sbc	1	sbc	
def	I_scf	1	scf	
def	I_set	1	set	
def	I_sla	1	sla	
def	I_sra	1	sra	
def	I_srl	1	srl	
def	I_sub	1	sub	
def	I_xor	1	xor	
endset
